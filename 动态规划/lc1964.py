from typing import List


class Solution:
    def longestObstacleCourseAtEachPosition(self, obstacles: List[int]) -> List[int]:
        return [self.longestIncreasingSubsequence(obstacles[:i+1]) for i in range(len(obstacles))]

    def longestIncreasingSubsequence(self, nums):
        if not nums:
            return 0
        length = len(nums)
        dp = [1] * length
        for i in range(length):
            for j in range(i):
                if nums[i] >= nums[j]:
                    dp[i] = max(dp[i], dp[j] + 1)
        return dp[length-1]

    def longestIncreasingSubsequence2(self, nums):
        d = []
        for n in nums:
            if not d or n > d[-1]:
                d.append(n)
            else:
                l, r = 0, len(d) - 1
                loc = r
                while l <= r:
                    mid = (l + r) // 2
                    if d[mid] >= n:
                        loc = mid
                        r = mid - 1
                    else:
                        l = mid + 1
                d[loc] = n
        return len(d)


if __name__ == '__main__':
    obstacles = [200,113,52,142,10,170,105,152,81,23,132,132,72,67,66,166,134,184,147,160,153,91,26,47,171,131,64,117,35,156,88,198,8,72,167,197,20,145,60,105,28,49,194,196,23,119,82,118,34,136,19,169,92,20,22,180,32,170,24,102,62,72,192,94,41,186,106,185,88,57,70,152,36,18,116,175,115,153,189,124,57,154,39,90,196,103,134,118,192,59,181,194,135,28,63,70,172,134,144,40,20,128,76,81,69,76,133,104,32,79,145,83,63,69,21,152,139,101,141,10,47,59,37,91,105,135,110,138,97,43,179,163,36,169,177,38,150,3,143,184,82,153,131,35,83,191,169,48,74,6,138,175,63,88,178,150,157,131,10,121,93,30,122,96,173,67,174,162,20,58,146,30,170,70,186,58,44,45,47,192,76,169,135,152,8,166,14,52,143,161,122,177,53,128,65,107,136,189,107,82,58,122,184,127,1,21,104,43,156,87,43,158,49,50,62,161,29,157,187,22,156,84,8,147,174,95,6,183,73,125,109,3,179,57,183,138,18,196,86,78,26,114,72,83,172,138,43,154,154,62,126,22,148,151,5,77,9,35,58,134,135,149,129,26,153,180,2,12,160,78,151,74,39,54,40,111,168,88,132,68,105,51,102,88,54,60,137,79,86,179,28,39,152,182,146,17,165,75,107,65,145,152,60,25,9,46,103,90,49,31,107,150,148,32,62,96,188,24,96,62,107,108,176,37,70,6,108,140,109,71,122,180,123,109,76,103,50,14,177,134,138,6,111,27,115,41,187,172,94,147,177,144,156,56,170,87,168,81,60,193,199,25,181,73,21,73,180,164,80,3,197,185,182,64,73,89,195,158,155,26,72,12,177,195,69,42,22,190,32,105,34,27,179,99,46,187,131,87,127,79,125,81,135,88,154,140,44,127,181,16,102,19,40,178,17,83,100,65,97,174,72,116,139,48,111,126,198,101,84,11,75,75,142,123,79,43,138,144,151,5,96,118,37,46,35,32,63,48,166,78,143,54,46,31,40,129,165,126,49,107,58,65,91,97,190,82,171,135,94,32,17,107,172,29,198,148,130,32,104,105,170,196,90,91,100,66,99,89,153,34,24,6,45,39,62,43,26,103,195,35,48,105,78,183,102,17,68,135,38,93,140,118,144,41,111,127,70,187,53,134,132,130,53,169,115,170,100,116,184,13,65,181,191,52,152,97,197,97,103,65,118,58,73,122,175,183,75,17,79,32,29,51,183,85,107,158,33,143,105,45,20,197,162,51,100,49,10,106,118,147,81,2,177,152,12,132,165,164,122,185,135,19,93,119,91,150,167,21,121,155,55,151,72,84,17,85,7,49,150,84,45,193,119,11,170,191,166,56,39,52,87,188,44,85,94,9,69,123,111,87,84,127,89,132,146,121,62,160,50,4,127,21,139,46,2,85,57,21,58,29,197,157,34,151,64,40,174,31,65,200,17,40,200,92,78,70,128,152,112,55,123,179,109,59,199,20,17,119,198,40,93,61,148,131,36,166,71,151,189,197,158,186,77,42,145,31,190,99,32,120,29,190,92,198,36,111,105,9,91,74,183,27,46,107,163,180,147,31,157,12,43,16,141,16,72,95,98,29,151,51,71,184,39,34,36,189,40,2,59,37,146,166,53,3,6,125,3,113,85,76,114,193,64,1,54,176,19,115,126,117,99,57,140,136,50,86,1,12,69,49,152,97,75,92,149,136,200,19,184,193,133,53,4,24,69,155,17,129,53,94,9,93,7,164,3,96,75,149,157,162,179,186,163,87,116,7,103,63,77,141,33,91,139,90,84,155,186,123,65,117,131,1,83,102,47,139,172,118,144,53,2,162,14,56,152,71,85,16,62,23,99,75,173,171,189,109,66,40,123,139,63,35,146,12,152,149,177,181,47,131,88,165,197,23,65,22,13,155,117,12,162,153,117,151,100,80,56,95,52,167,195,178,127,117,99,115,3,177,52,175,139,22,65,67,200,159,120,155,115,71,3,48,183,21,147,38,29,37,166,85,160,60,162,151,124,138,190,150,120,161,63,183,35,40,29,65,159,7,113,46,4,139,142,87,127,178,96,103,2,95,17,158,5,37,91,179,196,55,68,147,65,89,82,148,20,58,16,189,67,66,92,55,21,195,116,73,10,154,49,90,106,147,188,43,58,157,70,158,21,33,135,62,195,107,17,142,39,9,124,134,7,90,44,36,182,151,192,145,60,38,24,174,82,57,153,135,199,39,24,112]
    s = Solution()
    res = s.longestObstacleCourseAtEachPosition(obstacles)
    print(res)